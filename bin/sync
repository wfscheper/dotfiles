#!/usr/bin/env bash
set -e

usage () {
    echo "$0 pull FROM [rsync options]"
    echo "$0 push TO [rsync options]"
}

# readonly difftool=code --wait --diff
readonly difftool='nvim -d'


interactive_merge() {
    local src="$1"
    local dst="$2"

    # ignore these directories
    if [[ "${src}" == */dotfiles/.git* || "${src}" == */dotfiles/.rsyncignore ]]; then
        return
    fi

    if [[ -f "${src}" ]] && ! diff -q "${dst}" "${src}"; then
        $difftool "${dst}" "${src}"
    elif [[ -d "${src}" ]]; then
        # don't interative merge new directories
        [[ ! -d "${dst}" ]] && return
        for i in $(ls -A "${src}"); do
            interactive_merge "${src}/${i}" "${dst}/${i}"
        done
    fi
}

main() {
    local cwd=
    local dst=
    local globstar=
    local interactive=
    local mode=
    local rsync_opts=
    local src=
    local target=

    while [[ $# -gt 0 ]]; do
        case "$1" in
            push|pull)
                mode="$1"
                ;;
            -i|--interactive)
                interactive=true
                ;;
            --no-interactive)
                interactive=false
                ;;
            -*)
                rsync_opts="${rsync_opts} $1"
                ;;
            *)
                [[ -n "${target}" ]] && (usage; exit 1)
                target="$1"
                ;;
        esac
        shift
    done
    cwd="$(pwd)"
    case "${mode}" in
        pull)
            src="${target}"
            dst="${cwd}"
            [[ "${interactive}" = true ]] && (echo "error: unknown option '--interactive'" >&2; exit 1)
            [[ "${interactive}" = false ]] && (echo "error: unknown option '--no-interactive'" >&2; exit 1)
            interactive_merge "${src}" "${dst}"
            ;;
        push)
            src="${cwd}"
            dst="${target}"
            rsync_opts="-acO --delete --exclude-from=${src}/.rsyncignore"
            [[ -z "${interactive}" ]] && interactive=true
            # don't interactive merge when dst does not exist
            [[ ! -d "${dst}" ]] && interactive=false
            if [[ "${interactive}" = true ]]; then
                interactive_merge "${src}" "${dst}"
            fi
            # rsync the rest
            rsync --dry-run -v ${rsync_opts} ${src}/ ${dst}
            local response=
            read -p "Accept these changes? [y/N] " response
            if [[ "${response}" =~ [yY]([eE][sS])? ]]; then
                rsync ${rsync_opts} ${src}/ ${dst}
                [[ -f ~/dotfiles/_ssh/config ]] && chmod 0600 ~/dotfiles/_ssh/config
            fi
            ;;
        *)
            usage
            exit 1
            ;;
    esac
}

main "$@"
