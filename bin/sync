#!/usr/bin/env bash
set -e

usage () {
    echo "$0 pull FROM"
    echo "$0 push TO"
}

interactive_merge() {
    local src="$1"
    local dst="$2"

    # turn on globstar
    if ! shopt -q globstar; then
        globstar=1
        shopt -s globstar
    fi

    for file in _* install.sh bin/attach config/*/** ssh/** _vim/*/**; do
        if [[ -f "${file}" ]] && ! diff -q "${src}/${file}" "${dst}/${file}"
        then
            vimdiff "${dst}/${file}" "${src}/${file}"
        fi
    done

    if [[ -n "${globstar}" ]]; then
        shopt -u globstar
    fi

}
main() {
    local cwd=
    local dst=
    local globstar=
    local mode=
    local src=
    local target=

    mode="$1"
    shift || (usage; exit 1)

    target="$1"
    shift || (usage; exit 1)

    cwd="$(pwd)"

    case "${mode}" in
        pull)
            src="${target}"
            dst="${cwd}"
            interactive_merge "${src}" "${dst}"
            ;;
        push)
            src="${cwd}"
            dst="${target}"
            # don't interactive merge when dst does not exist
            if [[ -d "${dst}" ]]; then
                interactive_merge "${src}" "${dst}"
            fi

            RSYNC_ARGS="-acv $@ \
                --exclude='/.git*' \
                --exclude='/bin/sync' \
                ${src}/_bash_it \
                ${src}/_pyenv \
                ${src}/_zbin \
                ${dst}"
            rsync --dry-run ${RSYNC_ARGS}
            local response=
            read -p "Accept these changes? [y/N] " response
            if [[ "${response}" =~ [yY]([eE][sS])? ]]; then
                rsync ${RSYNC_ARGS}
                [[ -f ~/dotfiles/ssh/config ]] && \
                    chmod 0600 ~/dotfiles/ssh/config
            fi
            ;;
        *)
            usage
            exit 1
            ;;
    esac
}

main "$@"
